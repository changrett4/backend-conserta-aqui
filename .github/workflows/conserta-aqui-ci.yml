name: GitHub Actions Demo
run-name: ${{ github.actor }} is testing out GitHub Actions ðŸš€
on:
  push:
    branches:
      - main
jobs:
  create_env_file:
    runs-on: ubuntu-latest
    steps:
      - name: Make envfile
        uses: SpicyPizza/create-envfile@v2.0
        with:
          envkey_DB_HOST: ${{ secrets.DB_HOST }}
          envkey_DB_NAME: ${{ secrets.DB_NAME }}
          envkey_DB_PORT: ${{ secrets.DB_PORT }}
          envkey_DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          envkey_DB_USERNAME: ${{ secrets.DB_USERNAME }}
          file_name: .env
          fail_on_empty: false
          sort_keys: false
      - name: Upload .env file
        uses: actions/upload-artifact@v4
        with:
          name: env
          path: .env

  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: create_env_file
    permissions:
      packages: write
      contents: read
      attestations: write
    steps:
      - name: download env file
        uses: actions/download-artifact@v4
        with:
          name: env

      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/backend-conserta-aqui

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

  run_image_in_oci:
    name: Run image in OCI server
    runs-on: ubuntu-latest
    needs: push_to_registry
    steps:
      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          password: 
          passphrase: ${{ secrets.SSH_KEY_PASS }}
          script: |
            podman login docker.io -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
            docker pull ${{ secrets.DOCKER_USERNAME }}/backend-conserta-aqui:latest
            docker rm -f backend-conserta-aqui
            docker run -d -p ${{ secrets.APPLICATION_PORT }}:3000 --name backend-conserta-aqui ${{ secrets.DOCKER_USERNAME }}/backend-conserta-aqui
